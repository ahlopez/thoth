<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.f.thoth</groupId>
  <artifactId>evidentia</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Evidentia</name>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.2.RELEASE</version>
    <relativePath /> <!-- lookup parent from repository -->
  </parent>


  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <failOnMissingWebXml>false</failOnMissingWebXml>

    <!-- Dependencies -->
    <vaadin.version>14.6.2</vaadin.version>
    <vaadin.multiselectcombo.version>3.0.2</vaadin.multiselectcombo.version>
    <!--  <vaadin.crudui.version>4.3.2</vaadin.crudui.version> -->

    <!--... jackrabbit -->
    <jackrabbit.oak.version>1.36</jackrabbit.oak.version>
    <jcr.version>2.0</jcr.version>
    <oak.store.document.version>1.36</oak.store.document.version>
    <jackrabbit.jcr.commons.version>2.21.6</jackrabbit.jcr.commons.version>

    <!--... mongo -->
    <mongodb.driver.version>3.12.7</mongodb.driver.version>
    <mongodb.driver.core.version>4.0.5</mongodb.driver.core.version>

    <!--... spring -->
    <spring.data.provider.version>2.1.0</spring.data.provider.version>
    <spring.data.mongodb.version>3.1.1</spring.data.mongodb.version>

    <!-- Overrides the old version specified by the Spring Boot parent -->
    <selenium.version>3.141.59</selenium.version>
    <selenium.downloader.maven.version>1.0.18</selenium.downloader.maven.version>

    <!-- Plugins -->
    <frontend.maven.plugin.version>1.12.0</frontend.maven.plugin.version>
    <maven.war.plugin.version>3.3.1</maven.war.plugin.version>
    <maven.resources.plugin.version>3.2.0</maven.resources.plugin.version>
    <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
    <maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version>
    <maven.failsafe.plugin.version>3.0.0-M5</maven.failsafe.plugin.version>
    <maven.plugin.api.version>3.6.3</maven.plugin.api.version>

    <gatling.version>3.4.1</gatling.version>
    <gatling.plugin.version>3.1.0</gatling.plugin.version>
    <scala.maven.plugin.version>4.4.4</scala.maven.plugin.version>

    <!-- Frontend -->
    <node.version>v14.17.0</node.version>
    <yarn.version>v1.22.5</yarn.version>
    <buildtools.directory>build-tools</buildtools.directory>

    <!-- Other -->
    <h2.version>1.4.200</h2.version>
    <jaxb.version>2.3.1</jaxb.version>
    <commons.logging.version>1.2</commons.logging.version>
    <commons.io.version>2.8.0</commons.io.version>
    <slf4j.version>1.7.30</slf4j.version>
    <sauce.connect.plugin.version>2.1.25</sauce.connect.plugin.version>
    <ci.sauce.version>1.139</ci.sauce.version>
    <netty.transport.version>4.1.25.Final</netty.transport.version>

  </properties>

  <repositories>
    <!-- The order of definitions matters. Explicitly defining central here to make sure it has the highest priority. -->

    <!-- Main Maven repository -->
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>vaadin-addons</id>
      <url>https://maven.vaadin.com/vaadin-addons</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>vaadin-prereleases</id>
      <url>https://maven.vaadin.com/vaadin-prereleases</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

  </repositories>

  <pluginRepositories>

    <pluginRepository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>

    <pluginRepository>
      <id>vaadin-prereleases</id>
      <url>https://maven.vaadin.com/vaadin-prereleases</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>

  </pluginRepositories>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <dependencies>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>${commons.logging.version}</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <!-- version>${h2.version}</version>  -->
    </dependency>

    <!-- Vaadin -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin</artifactId>
      <exclusions>
        <!-- Webjars are only needed when running in Vaadin 13 compatibility mode -->
        <exclusion>
          <groupId>com.vaadin.webjar</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.insites</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.polymer</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.polymerelements</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.vaadin</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.webjars.bowergithub.webcomponents</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-spring</artifactId>
    </dependency>

    <dependency>
       <groupId>org.vaadin.gatanaso</groupId>
       <artifactId>multiselect-combo-box-flow</artifactId>
       <version>${vaadin.multiselectcombo.version}</version>
    </dependency>

    <dependency>
      <groupId>org.vaadin.artur</groupId>
      <artifactId>spring-data-provider</artifactId>
      <version>${spring.data.provider.version}</version>
    </dependency>

    <!-- Vaadin crud addon
    <dependency>
      <groupId>org.vaadin.crudui</groupId>
      <artifactId>crudui</artifactId>
      <version>${vaadin.crudui.version}</version>
    </dependency>
        -->
    <!-- ::::::::::::::::::::::::::::::End of Vaadin:::::::::::::::::::::::::::::: -->

    <!-- Spring -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.tomcat</groupId>
          <artifactId>tomcat-juli</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.tomcat</groupId>
          <artifactId>tomcat-jdbc</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-mongodb -->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-mongodb</artifactId>
      <!--  version>${spring.data.mongodb.version}</version>-->
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>


    <!-- :::::::::::::::::::::::::::::::::::::::End Spring:::::::::::::::::::::::::::::::::::::: -->

    <!--Add JAXB explicitly as the java.xml.bind module is not included by default anymore in Java 9-->
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
    </dependency>

    <!-- :::::::::::::::::::::::::::::::::: JackRabbit, Oak y MongoDB ::::::::::::::::::::::::::::::::: -->

    <!-- https://mvnrepository.com/artifact/org.apache.jackrabbit/oak-jcr -->
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>oak-jcr</artifactId>
      <version>${jackrabbit.oak.version}</version>
    </dependency>


    <!-- https://mvnrepository.com/artifact/javax.jcr/jcr ...(JackRabbit) -->
    <dependency>
      <groupId>javax.jcr</groupId>
      <artifactId>jcr</artifactId>
      <version>${jcr.version}</version>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver -->
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>${mongodb.driver.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.mongodb/mongodb-driver-core -->
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongodb-driver-core</artifactId>
      <!-- version>${mongodb.driver.core.version}</version> -->
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.apache.jackrabbit/oak-store-document -->
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>oak-store-document</artifactId>
      <version>${oak.store.document.version}</version>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.apache.jackrabbit/jackrabbit-jcr-commons -->
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-jcr-commons</artifactId>
      <version>${jackrabbit.jcr.commons.version}</version>
    </dependency>



    <!-- ::::::::::::::::::::::::::::::::::End jackrabbit, Oak, Mongodb:::::::::::::::::::::::::::::::::;;; -->


    <!-- Compile scope is needed to run on WildFly -->
    <dependency>
      <groupId>org.reactivestreams</groupId>
      <artifactId>reactive-streams</artifactId>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-testbench</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>


  <build>
    <defaultGoal>spring-boot:run</defaultGoal>
    <!-- The `pluginManagement` section allows listing plugin versions and
      their global configuration in one place. -->
    <pluginManagement>

      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven.war.plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-maven-plugin</artifactId>
          <version>${vaadin.version}</version>
        </plugin>

        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${frontend.maven.plugin.version}</version>
          <configuration>
            <nodeVersion>${node.version}</nodeVersion>
            <yarnVersion>${yarn.version}</yarnVersion>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>


    <plugins>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <!-- Clean build and startup time for Vaadin apps sometimes may exceed
             the default Spring Boot's 30sec timeout.  -->
        <configuration>
          <wait>500</wait>
          <maxAttempts>240</maxAttempts>
        </configuration>
      </plugin>


      <!--
          Take care of synchronizing java dependencies and imports in
          package.json and main.js files.
          It also creates webpack.config.js if not exists yet.
      -->
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <!--  version>${vaadin.version}</version> -->
        <configuration>
           <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>prepare-frontend</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- Production mode is activated using -Pproduction -->
      <id>production</id>
      <properties>
        <vaadin.productionMode>true</vaadin.productionMode>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>flow-server-production-mode</artifactId>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>build-frontend</goal>
                </goals>
                <phase>compile</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Moving spring-boot start/stop into a separate profile speeds up regular builds.
         Execute mvn verify -Pit to run integration tests -->
    <profile>
      <id>it</id>
      <activation>
        <property>
          <name>it</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>pre-integration-test</id>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>post-integration-test</id>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <wait>1000</wait>
              <maxAttempts>180</maxAttempts>
            </configuration>
          </plugin>
          <plugin>
            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-failsafe-plugin -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven.failsafe.plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <systemPropertyVariables>
                <webdriver.chrome.driver>${webdriver.chrome.driver}</webdriver.chrome.driver>
                <com.vaadin.testbench.Parameters.runLocally>chrome</com.vaadin.testbench.Parameters.runLocally>
              </systemPropertyVariables>
            </configuration>
          </plugin>

          <!-- Plugin for automatically download Chrome Driver for tests -->
          <plugin>
            <!-- https://mvnrepository.com/artifact/com.lazerycode.selenium/driver-binary-downloader-maven-plugin -->
            <groupId>com.lazerycode.selenium</groupId>
            <artifactId>driver-binary-downloader-maven-plugin</artifactId>
            <version>${selenium.downloader.maven.version}</version>

            <!--
            <configuration>
              <!- - root directory that downloaded driver binaries will be stored in - ->
              <onlyGetDriversForHostOperatingSystem>true</onlyGetDriversForHostOperatingSystem>
              <rootStandaloneServerDirectory>.driver</rootStandaloneServerDirectory>
              <customRepositoryMap>webdrivers.xml</customRepositoryMap>
            </configuration>

            <executions>
              <execution>
                <goals>
                  <goal>selenium</goal>
                </goals>
              </execution>
            </executions>
            -->
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>it-saucelabs</id>
      <properties>
        <sauce.options>--tunnel-identifier ${maven.build.timestamp}</sauce.options>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HHmmss.SSSZ</maven.build.timestamp.format>
      </properties>
      <build>
        <plugins>

          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>pre-integration-test</id>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>post-integration-test</id>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <wait>1000</wait>
              <maxAttempts>180</maxAttempts>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven.failsafe.plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <systemPropertyVariables>
                <sauce.user>${sauce.user}</sauce.user>
                <sauce.sauceAccessKey>${sauce.sauceAccessKey}</sauce.sauceAccessKey>
                <sauce.options>${sauce.options}</sauce.options>
                <com.vaadin.testbench.Parameters.gridBrowsers>${com.vaadin.testbench.Parameters.gridBrowsers}</com.vaadin.testbench.Parameters.gridBrowsers>
              </systemPropertyVariables>
            </configuration>
          </plugin>

          <plugin>
            <!-- https://mvnrepository.com/artifact/com.saucelabs.maven.plugin/sauce-connect-plugin -->
            <groupId>com.saucelabs.maven.plugin</groupId>
            <artifactId>sauce-connect-plugin</artifactId>
            <version>${sauce.connect.plugin.version}</version>
            <!--
            <configuration>
              <systemPropertyVariables>
                <sauce.user>${sauce.user}</sauce.user>
                <sauce.sauceAccessKey>${sauce.sauceAccessKey}</sauce.sauceAccessKey>
                <sauce.options>${sauce.options}</sauce.options>
              </systemPropertyVariables>
              <sauceUsername>${sauce.user}</sauceUsername>
              <sauceAccessKey>${sauce.sauceAccessKey}</sauceAccessKey>
              <options>${sauce.options}</options>
            </configuration>

            <dependencies>

              <!- - https://mvnrepository.com/artifact/com.saucelabs/ci-sauce - ->
              <dependency>
                <groupId>com.saucelabs</groupId>
                <artifactId>ci-sauce</artifactId>
                <version>${ci.sauce.version}</version>
              </dependency>

              <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${jaxb.version}</version>
              </dependency>

              <!- - https://mvnrepository.com/artifact/commons-io/commons-io - ->
              <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
              </dependency>

              <!- - https://mvnrepository.com/artifact/org.apache.maven/maven-plugin-api - ->
              <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-plugin-api</artifactId>
                <version>${maven.plugin.api.version}</version>
              </dependency>
            </dependencies>


            <executions>
              <!- - Start Sauce Connect prior to running the integration tests - ->
              <execution>
                <id>start-sauceconnect</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start-sauceconnect</goal>
                </goals>
              </execution>
              <!- - Stop the Sauce Connect process after the integration tests have finished - ->
              <execution>
                <id>stop-sauceconnect</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop-sauceconnect</goal>
                </goals>
              </execution>
            </executions>
      -->

          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>lint</id>
      <activation>
        <property>
          <name>runLint</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-node-and-yarn</id>
                <goals>
                  <goal>install-node-and-yarn</goal>
                  <goal>yarn</goal> <!-- runs 'install' by default -->
                </goals>
                <configuration>
                  <workingDirectory>${buildtools.directory}</workingDirectory>
                </configuration>
              </execution>
              <execution>
                <id>npm run lint</id>
                <phase>compile</phase>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>run lint</arguments>
                  <workingDirectory>${buildtools.directory}</workingDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- For running Gatling tests -->
      <id>scalability</id>
      <activation>
        <property>
          <name>scalability</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport</artifactId>
          <version>${netty.transport.version}</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>io.gatling.highcharts</groupId>
          <artifactId>gatling-charts-highcharts</artifactId>
          <version>${gatling.version}</version>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>io.netty</groupId>
              <artifactId>netty-transport</artifactId>
            </exclusion>
          </exclusions>
        </dependency>

      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <version>${scala.maven.plugin.version}</version>
          </plugin>
          <plugin>
            <groupId>io.gatling</groupId>
            <artifactId>gatling-maven-plugin</artifactId>
            <version>${gatling.plugin.version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>